#
# Spectrum Scale v5.0 bash completion scripts
# Author: Maarten Kreuger (maarten_kreuger@nl.ibm.com)
# Download from github: github.com/MaartenKreuger/scale-completion
# Available using MIT License
# Copyright IBM 2020
#

_mmauth_completion()
{
  COMPREPLY=()
  case "${#COMP_WORDS[@]}" in
    2) COMPREPLY=($(compgen -W 'genkey add update delete grant deny show gencert' -- "${COMP_WORDS[COMP_CWORD]}"));;
    *) case ${COMP_WORDS[1]} in
          genkey) if [ $COMP_CWORD -eq 2 ] 
                  then 
                      COMPREPLY=($(compgen -W 'new commit propagate' -- "${COMP_WORDS[COMP_CWORD]}"))
                  else 
                     case "${COMP_WORDS[COMP_CWORD-1]}" in
                        -N) COMPREPLY=($(compgen -W "$(_nodes;_nodeclasses)" -- "${COMP_WORDS[COMP_CWORD]}"));; 
                        *) COMPREPLY=($(compgen -W '-N' -- "${COMP_WORDS[COMP_CWORD]}"));;
                     esac
                  fi;;
          add) if [ $COMP_CWORD -eq 2 ] 
                  then 
                      COMPREPLY=($(compgen -W 'RemoteClusterName' -- "${COMP_WORDS[COMP_CWORD]}"))
                  else 
                     case "${COMP_WORDS[COMP_CWORD-1]}" in
                        -k) COMPREPLY=($(compgen -f -o filenames -- "${COMP_WORDS[COMP_CWORD]}"));; 
                        -l) COMPREPLY=($(compgen -W "EMPTY AUTHONLY AES128-SHA AES256-SHA DES-CBC3-SHA" -- "${COMP_WORDS[COMP_CWORD]}"));; 
                        *) COMPREPLY=($(compgen -W '-k -l' -- "${COMP_WORDS[COMP_CWORD]}"));;
                     esac
                  fi;;
          update) if [ $COMP_CWORD -eq 2 ]
                  then
                      COMPREPLY=($(compgen -W "$(_remote_clusters)" -- "${COMP_WORDS[COMP_CWORD]}"))
                  else
                     case "${COMP_WORDS[COMP_CWORD-1]}" in
                        -k) COMPREPLY=($(compgen -f -o filenames -- "${COMP_WORDS[COMP_CWORD]}"));;          
                        -l) COMPREPLY=($(compgen -W "EMPTY AUTHONLY AES128-SHA AES256-SHA DES-CBC3-SHA" -- "${COMP_WORDS[COMP_CWORD]}"));;
                        -C) COMPREPLY=($(compgen -W "NewClusterName" -- "${COMP_WORDS[COMP_CWORD]}"));;
                        *) COMPREPLY=($(compgen -W '-k -l -C' -- "${COMP_WORDS[COMP_CWORD]}"));;
                     esac
                  fi;;
          delete) COMPREPLY=($(compgen -W "$(_remote_clusters) all" -- "${COMP_WORDS[COMP_CWORD]}"));;
          grant) if [ $COMP_CWORD -eq 2 ]
                  then
                      COMPREPLY=($(compgen -W "$(_remote_clusters) all" -- "${COMP_WORDS[COMP_CWORD]}"))
                  else
                     case "${COMP_WORDS[COMP_CWORD-1]}" in
                        -f) COMPREPLY=($(compgen -W "$(_localfs_names) all" -- "${COMP_WORDS[COMP_CWORD]}"));;
                        -a) COMPREPLY=($(compgen -W "rw ro" -- "${COMP_WORDS[COMP_CWORD]}"));;
                        -r) COMPREPLY=($(compgen -W "uid:gid no" -- "${COMP_WORDS[COMP_CWORD]}"));;
                        *) COMPREPLY=($(compgen -W '-f -a -r' -- "${COMP_WORDS[COMP_CWORD]}"));;
                     esac
                  fi;;
          deny) if [ $COMP_CWORD -eq 2 ]
                  then
                      COMPREPLY=($(compgen -W "$(_remote_clusters) all" -- "${COMP_WORDS[COMP_CWORD]}"))
                  else
                     case "${COMP_WORDS[COMP_CWORD-1]}" in
                        -f) COMPREPLY=($(compgen -W "$(_localfs_names) all" -- "${COMP_WORDS[COMP_CWORD]}"));;
                        *) COMPREPLY=($(compgen -W '-f' -- "${COMP_WORDS[COMP_CWORD]}"));;
                     esac
                  fi;;
          show) if [ $COMP_CWORD -eq 2 ]
                  then
                      COMPREPLY=($(compgen -W "$(_remote_clusters) all ciphers" -- "${COMP_WORDS[COMP_CWORD]}"))
                  else
                      COMPREPLY=($(compgen -W '-Y' -- "${COMP_WORDS[COMP_CWORD]}"))
                  fi;;
          gencert) case "${COMP_WORDS[COMP_CWORD-1]}" in
                     --cert) COMPREPLY=($(compgen -f -o filenames -- "${COMP_WORDS[COMP_CWORD]}"));;
                     --out) COMPREPLY=($(compgen -f -o filenames -- "${COMP_WORDS[COMP_CWORD]}"));;
                     --pwd-file) COMPREPLY=($(compgen -f -o filenames -- "${COMP_WORDS[COMP_CWORD]}"));;
                     --label) COMPREPLY=($(compgen -W "" -- "${COMP_WORDS[COMP_CWORD]}"));;
                     --cname) COMPREPLY=($(compgen -W "" -- "${COMP_WORDS[COMP_CWORD]}"));;
                     *)  COMPREPLY=($(compgen -W '--cert --out --pwd-file --label --cname' -- "${COMP_WORDS[COMP_CWORD]}"));;
                   esac;;
          *) COMPREPLY=($(compgen -W "Unsupported_option:${COMP_WORDS[1]}" -- "${COMP_WORDS[COMP_CWORD]}"));;  
     esac;;
  esac
}
complete -F _mmauth_completion mmauth
