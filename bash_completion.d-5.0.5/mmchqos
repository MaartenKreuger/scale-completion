#
# Spectrum Scale v5.0 bash completion scripts
# Author: Maarten Kreuger (maarten_kreuger@nl.ibm.com)
# Download from github: github.com/MaartenKreuger/scale-completion
# Available using MIT License
# Copyright IBM 2020
#

_mmchqos_completion()
{
  COMPREPLY=()
  case "${#COMP_WORDS[@]}" in
    2) COMPREPLY=($(compgen -W "$(_fs_names)" -- "${COMP_WORDS[1]}"));;
    3) COMPREPLY=($(compgen -W "--enable --disable" -- "${COMP_WORDS[COMP_CWORD]}"));;
    *) case "${COMP_WORDS[2]}" in
         --disable) return 0;;
         --enable)  case "${COMP_WORDS[COMP_CWORD-1]}" in
                      -F) COMPREPLY=($(compgen -f -o filenames -- "${COMP_WORDS[COMP_CWORD]}"));;
                      -N) COMPREPLY=($(compgen -W "$(_nodes;_nodeclasses)" -- "${COMP_WORDS[COMP_CWORD]}"));;
                      --fine-stats) COMPREPLY=($(compgen -W "" -- "${COMP_WORDS[COMP_CWORD]}"));;
                      --pid-stats) COMPREPLY=($(compgen -W "yes no" -- "${COMP_WORDS[COMP_CWORD]}"));;
                      --stat-poll-interval) COMPREPLY=($(compgen -W "" -- "${COMP_WORDS[COMP_CWORD]}"));;
                      --stat-slot-interval) COMPREPLY=($(compgen -W "" -- "${COMP_WORDS[COMP_CWORD]}"));;
                      -C) COMPREPLY=($(compgen -W "all all_remote $(_remote_clusters)" -- "${COMP_WORDS[COMP_CWORD]}"));;
                      pool=) COMPREPLY=($(compgen -W "" -- "${COMP_WORDS[COMP_CWORD]}"));;
                      --qos) COMPREPLY=($(compgen -W "$(_qos_classes)" -- "${COMP_WORDS[COMP_CWORD]}"));;
                      *) COMPREPLY=($(compgen -W '--reset --force --fine-stats --pid-stats --stat-poll-interval --stat-slot-time -N -C pool= -F' -- "${COMP_WORDS[COMP_CWORD]}"));;
                    esac;;
      esac;;
  esac
}
complete -F _mmchqos_completion mmchqos
