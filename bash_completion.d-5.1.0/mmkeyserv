#
# Spectrum Scale v5.0 bash completion scripts
# Author: Maarten Kreuger (maarten_kreuger@nl.ibm.com)
# Download from github: github.com/MaartenKreuger/scale-completion
# Available using MIT License
# Copyright IBM 2020
#

_mmkeyserv_completion()
{
  COMPREPLY=()
  case "${#COMP_WORDS[@]}" in
    2) COMPREPLY=($(compgen -W 'server tenant key client rkm'  -- "${COMP_WORDS[COMP_CWORD]}"));;
    3) case "${COMP_WORDS[1]}" in
         server) COMPREPLY=($(compgen -W 'add update delete show'  -- "${COMP_WORDS[COMP_CWORD]}"));;
         tenant) COMPREPLY=($(compgen -W 'add delete show '  -- "${COMP_WORDS[COMP_CWORD]}"));;
         key) COMPREPLY=($(compgen -W 'create delete show'  -- "${COMP_WORDS[COMP_CWORD]}"));;
         client) COMPREPLY=($(compgen -W 'create update delete register deregister show'  -- "${COMP_WORDS[COMP_CWORD]}"));;
         rkm) COMPREPLY=($(compgen -W 'change show'  -- "${COMP_WORDS[COMP_CWORD]}"));;
       esac;;
    *) case "${COMP_WORDS[1]}" in
          server) case "${COMP_WORDS[2]}" in
                     delete) COMPREPLY=($(compgen -W ""  -- "${COMP_WORDS[COMP_CWORD]}"));;
                     show) COMPREPLY=($(compgen -W "-Y"  -- "${COMP_WORDS[COMP_CWORD]}"));;
                     add|update) if [ $COMP_CWORD -eq 3 ]
                          then
                             COMPREPLY=($(compgen -W "" -- "${COMP_WORDS[COMP_CWORD]}"))
                          else 
                             case  "${COMP_WORDS[COMP_CWORD-1]}" in
                                --port) COMPREPLY=($(compgen -W "" -- "${COMP_WORDS[COMP_CWORD]}"));;
                                --user-id) COMPREPLY=($(compgen -W "" -- "${COMP_WORDS[COMP_CWORD]}"));;
                                --server-pwd) COMPREPLY=($(compgen -f -o filenames -- "${COMP_WORDS[COMP_CWORD]}"));;
                                --kmip-cert) COMPREPLY=($(compgen -W "" -- "${COMP_WORDS[COMP_CWORD]}"));;
                                --backup) COMPREPLY=($(compgen -W "" -- "${COMP_WORDS[COMP_CWORD]}"));;
                                --timeout) COMPREPLY=($(compgen -W "" -- "${COMP_WORDS[COMP_CWORD]}"));;
                                --retry) COMPREPLY=($(compgen -W "" -- "${COMP_WORDS[COMP_CWORD]}"));;
                                --interval) COMPREPLY=($(compgen -W "" -- "${COMP_WORDS[COMP_CWORD]}"));;
                                *) COMPREPLY=($(compgen -W "--port --user-id --server-pwd --accept --kmip-cert --backup --distribute --nodistribute --timeout --retry --interval"  -- "${COMP_WORDS[COMP_CWORD]}"));;
                             esac
                          fi;;  
                  esac;;
         tenant) case "${COMP_WORDS[2]}" in
                     add|delete) if [ $COMP_CWORD -eq 3 ]
                          then
                             COMPREPLY=($(compgen -W "" -- "${COMP_WORDS[COMP_CWORD]}"))
                          else
                             case  "${COMP_WORDS[COMP_CWORD-1]}" in
                                --server) COMPREPLY=($(compgen -W "" -- "${COMP_WORDS[COMP_CWORD]}"));;
                                --server-pwd) COMPREPLY=($(compgen -f -o filenames -- "${COMP_WORDS[COMP_CWORD]}"));;
                                *) COMPREPLY=($(compgen -W "--server --server-pwd"  -- "${COMP_WORDS[COMP_CWORD]}"));;
                             esac
                          fi;;
                     show) if [ $COMP_CWORD -eq 3 ]
                          then
                             COMPREPLY=($(compgen -W "" -- "${COMP_WORDS[COMP_CWORD]}"))
                          else
                             case  "${COMP_WORDS[COMP_CWORD-1]}" in
                                --server) COMPREPLY=($(compgen -W "" -- "${COMP_WORDS[COMP_CWORD]}"));;
                                *) COMPREPLY=($(compgen -W "--server -Y"  -- "${COMP_WORDS[COMP_CWORD]}"));;
                             esac
                          fi;;
                 esac;;
        key) case "${COMP_WORDS[2]}" in
                     create) case  "${COMP_WORDS[COMP_CWORD-1]}" in
                                --server) COMPREPLY=($(compgen -W "" -- "${COMP_WORDS[COMP_CWORD]}"));;
                                --server-pwd) COMPREPLY=($(compgen -f -o filenames -- "${COMP_WORDS[COMP_CWORD]}"));;
                                --tenant) COMPREPLY=($(compgen -W "" -- "${COMP_WORDS[COMP_CWORD]}"));;
                                --count) COMPREPLY=($(compgen -W "" -- "${COMP_WORDS[COMP_CWORD]}"));;
                                --file) COMPREPLY=($(compgen -f -o filenames -- "${COMP_WORDS[COMP_CWORD]}"));;
                                *) COMPREPLY=($(compgen -W "--server --server-pwd --tenant --file"  -- "${COMP_WORDS[COMP_CWORD]}"));;
                             esac;;
                     delete) case  "${COMP_WORDS[COMP_CWORD-1]}" in
                                --server) COMPREPLY=($(compgen -W "" -- "${COMP_WORDS[COMP_CWORD]}"));;
                                --server-pwd) COMPREPLY=($(compgen -f -o filenames -- "${COMP_WORDS[COMP_CWORD]}"));;
                                --tenant) COMPREPLY=($(compgen -W "" -- "${COMP_WORDS[COMP_CWORD]}"));;
                                --file) COMPREPLY=($(compgen -f -o filenames -- "${COMP_WORDS[COMP_CWORD]}"));;
                                *) COMPREPLY=($(compgen -W "--server --server-pwd --tenant -all --file"  -- "${COMP_WORDS[COMP_CWORD]}"));;
                             esac;;
                     show) case  "${COMP_WORDS[COMP_CWORD-1]}" in
                                --server) COMPREPLY=($(compgen -W "" -- "${COMP_WORDS[COMP_CWORD]}"));;
                                --server-pwd) COMPREPLY=($(compgen -f -o filenames -- "${COMP_WORDS[COMP_CWORD]}"));;
                                --tenant) COMPREPLY=($(compgen -W "" -- "${COMP_WORDS[COMP_CWORD]}"));;
                                --file) COMPREPLY=($(compgen -f -o filenames -- "${COMP_WORDS[COMP_CWORD]}"));;
                                *) COMPREPLY=($(compgen -W "--server --server-pwd --tenant --file"  -- "${COMP_WORDS[COMP_CWORD]}"));;
                             esac;;
             esac;;
        client) case "${COMP_WORDS[2]}" in
                     create) if [ $COMP_CWORD -eq 3 ]
                             then
                                COMPREPLY=($(compgen -W "" -- "${COMP_WORDS[COMP_CWORD]}"))
                             else
                                case  "${COMP_WORDS[COMP_CWORD-1]}" in
                                   --server) COMPREPLY=($(compgen -W "" -- "${COMP_WORDS[COMP_CWORD]}"));;
                                   --server-pwd) COMPREPLY=($(compgen -f -o filenames -- "${COMP_WORDS[COMP_CWORD]}"));;
                                   --cert) COMPREPLY=($(compgen -f -o filenames -- "${COMP_WORDS[COMP_CWORD]}"));;
                                   --priv) COMPREPLY=($(compgen -f -o filenames -- "${COMP_WORDS[COMP_CWORD]}"));;
                                   --ca-chain) COMPREPLY=($(compgen -f -o filenames -- "${COMP_WORDS[COMP_CWORD]}"));;
                                   --ca-cert) COMPREPLY=($(compgen -W "" -- "${COMP_WORDS[COMP_CWORD]}"));;
                                   --days) COMPREPLY=($(compgen -W "" -- "${COMP_WORDS[COMP_CWORD]}"));;
                                   --keystore-pwd) COMPREPLY=($(compgen -f -o filenames -- "${COMP_WORDS[COMP_CWORD]}"));;
                                   *) COMPREPLY=($(compgen -W "--cert --priv --ca-chain --ca-cert --server --server-pwd --days --keystore-pwd"  -- "${COMP_WORDS[COMP_CWORD]}"));;
                                esac
                             fi;;
                     update) if [ $COMP_CWORD -eq 3 ]
                             then
                                COMPREPLY=($(compgen -W "" -- "${COMP_WORDS[COMP_CWORD]}"))
                             else
                                case  "${COMP_WORDS[COMP_CWORD-1]}" in
                                   --client) COMPREPLY=($(compgen -W "" -- "${COMP_WORDS[COMP_CWORD]}"));;
                                   --server-pwd) COMPREPLY=($(compgen -f -o filenames -- "${COMP_WORDS[COMP_CWORD]}"));;
                                   --cert) COMPREPLY=($(compgen -f -o filenames -- "${COMP_WORDS[COMP_CWORD]}"));;
                                   --priv) COMPREPLY=($(compgen -f -o filenames -- "${COMP_WORDS[COMP_CWORD]}"));;
                                   --ca-chain) COMPREPLY=($(compgen -f -o filenames -- "${COMP_WORDS[COMP_CWORD]}"));;
                                   --ca-cert) COMPREPLY=($(compgen -W "" -- "${COMP_WORDS[COMP_CWORD]}"));;
                                   --days) COMPREPLY=($(compgen -W "" -- "${COMP_WORDS[COMP_CWORD]}"));;
                                   --keystore-pwd) COMPREPLY=($(compgen -f -o filenames -- "${COMP_WORDS[COMP_CWORD]}"));;
                                   *) COMPREPLY=($(compgen -W "--cert --priv --ca-chain --ca-cert --force --server-pwd --days --keystore-pwd"  -- "${COMP_WORDS[COMP_CWORD]}"));;
                                esac
                             fi;;
                     delete) COMPREPLY=($(compgen -W "" -- "${COMP_WORDS[COMP_CWORD]}"));;
                     register) if [ $COMP_CWORD -eq 3 ]
                               then
                                   COMPREPLY=($(compgen -W "" -- "${COMP_WORDS[COMP_CWORD]}"))
                               else
                                  case  "${COMP_WORDS[COMP_CWORD-1]}" in
                                     --rkm-id) COMPREPLY=($(compgen -W "" -- "${COMP_WORDS[COMP_CWORD]}"));;
                                     --tenant) COMPREPLY=($(compgen -W "" -- "${COMP_WORDS[COMP_CWORD]}"));;
                                     --server-pwd) COMPREPLY=($(compgen -f -o filenames -- "${COMP_WORDS[COMP_CWORD]}"));;
                                     *) COMPREPLY=($(compgen -W "--rkm-id --tenant --server-pwd"  -- "${COMP_WORDS[COMP_CWORD]}"));;
                                  esac
                               fi;;
                    deregister) if [ $COMP_CWORD -eq 3 ]
                               then
                                   COMPREPLY=($(compgen -W "" -- "${COMP_WORDS[COMP_CWORD]}"))
                               else
                                  case  "${COMP_WORDS[COMP_CWORD-1]}" in
                                     --tenant) COMPREPLY=($(compgen -W "" -- "${COMP_WORDS[COMP_CWORD]}"));;
                                     --server-pwd) COMPREPLY=($(compgen -f -o filenames -- "${COMP_WORDS[COMP_CWORD]}"));;
                                     *) COMPREPLY=($(compgen -W "--tenant --server-pwd"  -- "${COMP_WORDS[COMP_CWORD]}"));;
                                  esac
                               fi;;
                    show) case  "${COMP_WORDS[COMP_CWORD-1]}" in
                                --server) COMPREPLY=($(compgen -W "" -- "${COMP_WORDS[COMP_CWORD]}"));;
                                *) COMPREPLY=($(compgen -W "--server ClientName -Y"  -- "${COMP_WORDS[COMP_CWORD]}"));;
                          esac;;
                esac;;
         rkm) case "${COMP_WORDS[2]}" in  
                    show) return 0;;
                    change) if [ $COMP_CWORD -eq 3 ]
                            then
                                   COMPREPLY=($(compgen -W "" -- "${COMP_WORDS[COMP_CWORD]}"))
                             else
                                case  "${COMP_WORDS[COMP_CWORD-1]}" in
                                   --rkm-id) COMPREPLY=($(compgen -W "" -- "${COMP_WORDS[COMP_CWORD]}"));;
                                   --backup) COMPREPLY=($(compgen -W "" -- "${COMP_WORDS[COMP_CWORD]}"));;
                                   --timeout) COMPREPLY=($(compgen -W "" -- "${COMP_WORDS[COMP_CWORD]}"));;
                                   --retry) COMPREPLY=($(compgen -W "" -- "${COMP_WORDS[COMP_CWORD]}"));;
                                   --interval) COMPREPLY=($(compgen -W "" -- "${COMP_WORDS[COMP_CWORD]}"));;
                                   *) COMPREPLY=($(compgen -W "--rkm-id --backup --distribute --nodistribute --timeout --retry --interval"  -- "${COMP_WORDS[COMP_CWORD]}"));;
                               esac
                            fi;;
             esac;;
     esac;;
  esac
}
complete -F _mmkeyserv_completion mmkeyserv
