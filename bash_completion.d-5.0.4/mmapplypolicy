#
# Spectrum Scale v5.0 bash completion scripts
# Author: Maarten Kreuger (maarten_kreuger@nl.ibm.com)
# Download from github: github.com/MaartenKreuger/scale-completion
# Available using MIT License
# Copyright IBM 2020
#

_mmapplypolicy_completion()
{
  COMPREPLY=()
  case "${#COMP_WORDS[@]}" in
    2) COMPREPLY=($(compgen -f -o dirnames -W "$(_localfs_names)" -- "${COMP_WORDS[1]}"));;
    *) case "${COMP_WORDS[COMP_CWORD-1]}" in
         -N) COMPREPLY=($(compgen -W "$(_nodes;_nodeclasses) all mount" -- "${COMP_WORDS[COMP_CWORD]}"));;
         --qos) COMPREPLY=($(compgen -W "$(_qos_classes)" -- "${COMP_WORDS[COMP_CWORD]}"));;
         -g) COMPREPLY=($(compgen -f -o filenames  -- "${COMP_WORDS[COMP_CWORD]}"));;
         -i) COMPREPLY=($(compgen -f -o filenames  -- "${COMP_WORDS[COMP_CWORD]}"));;
         -P) COMPREPLY=($(compgen -f -o filenames  -- "${COMP_WORDS[COMP_CWORD]}"));;
         -r) COMPREPLY=($(compgen -f -o filenames  -- "${COMP_WORDS[COMP_CWORD]}"));;
         -s) COMPREPLY=($(compgen -f -o dirnames  -- "${COMP_WORDS[COMP_CWORD]}"));;
         -A) COMPREPLY=($(compgen -W "" -- "${COMP_WORDS[COMP_CWORD]}"));;
         -a) COMPREPLY=($(compgen -W "" -- "${COMP_WORDS[COMP_CWORD]}"));;
         -B) COMPREPLY=($(compgen -W "" -- "${COMP_WORDS[COMP_CWORD]}"));;
         -D) COMPREPLY=($(compgen -W "" -- "${COMP_WORDS[COMP_CWORD]}"));;
         -f) COMPREPLY=($(compgen -W "" -- "${COMP_WORDS[COMP_CWORD]}"));;
         -I) COMPREPLY=($(compgen -W "yes defer test prepare" -- "${COMP_WORDS[COMP_CWORD]}"));;
         -L) COMPREPLY=($(compgen -W "" -- "${COMP_WORDS[COMP_CWORD]}"));;
         -M) COMPREPLY=($(compgen -W "" -- "${COMP_WORDS[COMP_CWORD]}"));;
         -m) COMPREPLY=($(compgen -W "" -- "${COMP_WORDS[COMP_CWORD]}"));;
         -n) COMPREPLY=($(compgen -W "" -- "${COMP_WORDS[COMP_CWORD]}"));;
         -S) COMPREPLY=($(compgen -W "$(_fs_snapshots ${COMP_WORDS[1]})" -- "${COMP_WORDS[COMP_CWORD]}"));;
         --choice-algorithm) COMPREPLY=($(compgen -W "best exact fast" -- "${COMP_WORDS[COMP_CWORD]}"));;
         --maxdepth) COMPREPLY=($(compgen -W "" -- "${COMP_WORDS[COMP_CWORD]}"));;
         --max-merge-files) COMPREPLY=($(compgen -W "" -- "${COMP_WORDS[COMP_CWORD]}"));;
         --max-sort-bytes) COMPREPLY=($(compgen -W "" -- "${COMP_WORDS[COMP_CWORD]}"));;
         --other-sort-options) COMPREPLY=($(compgen -W "" -- "${COMP_WORDS[COMP_CWORD]}"));;
         --scope) COMPREPLY=($(compgen -W "filesystem fileset inodespace" -- "${COMP_WORDS[COMP_CWORD]}"));;
         --sort-command) COMPREPLY=($(compgen -W "" -- "${COMP_WORDS[COMP_CWORD]}"));;
         --split-margin) COMPREPLY=($(compgen -W "" -- "${COMP_WORDS[COMP_CWORD]}"));;
         *) COMPREPLY=($(compgen -W '-A -a -B -D -e -f -g -I -i -L n -M -m -N -n -P -q -r -S -s --choice-algorithm --maxdepth --max-merge-files --max-sort-bytes --other-sort-options --qos --scope --single-instance --sort-buffer-size --sort-command --split-filelists-by-weight --split-margin' -- "${COMP_WORDS[COMP_CWORD]}"));;
      esac;;
  esac
}
complete -F _mmapplypolicy_completion mmapplypolicy
