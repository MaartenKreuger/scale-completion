#
# Spectrum Scale v5.0 bash completion scripts
# Author: Maarten Kreuger (maarten_kreuger@nl.ibm.com)
# Download from github: github.com/scale-completion
# Available using MIT License
# Copyright IBM 2020
#

_mmaudit_completion()
{
  COMPREPLY=()
  case "${#COMP_WORDS[@]}" in
    2) COMPREPLY=($(compgen -W "$(_localfs_names) all"  -- "${COMP_WORDS[COMP_CWORD]}"));;
    3) case "${COMP_WORDS[1]}" in
         all) COMPREPLY=($(compgen -W 'list consumerStart consumerStop consumerStatus upgradePolicies'  -- "${COMP_WORDS[COMP_CWORD]}"));;
         *) COMPREPLY=($(compgen -W 'enable disable update list '  -- "${COMP_WORDS[COMP_CWORD]}"));;
       esac;;
    *) case "${COMP_WORDS[1]}" in
          all) case "${COMP_WORDS[2]}" in
                   list) COMPREPLY=($(compgen -W "--events -Y"  -- "${COMP_WORDS[COMP_CWORD]}"));;
                   consumerStart)  case  "${COMP_WORDS[COMP_CWORD-1]}" in
                                      -N) COMPREPLY=($(compgen -W "$(_nodes;_nodeclasses)" -- "${COMP_WORDS[COMP_CWORD]}"));;
                                      *) COMPREPLY=($(compgen -W "-N -q"  -- "${COMP_WORDS[COMP_CWORD]}"));;
                                   esac;;
                   consumerStop)   case  "${COMP_WORDS[COMP_CWORD-1]}" in
                                      -N) COMPREPLY=($(compgen -W "$(_nodes;_nodeclasses)" -- "${COMP_WORDS[COMP_CWORD]}"));;
                                      *) COMPREPLY=($(compgen -W "-N -q"  -- "${COMP_WORDS[COMP_CWORD]}"));;
                                   esac;;
                   consumerStatus) case  "${COMP_WORDS[COMP_CWORD-1]}" in
                                      -N) COMPREPLY=($(compgen -W "$(_nodes;_nodeclasses)" -- "${COMP_WORDS[COMP_CWORD]}"));;
                                      *) COMPREPLY=($(compgen -W "-N -q -Y"  -- "${COMP_WORDS[COMP_CWORD]}"));;
                                   esac;;
                   upgradePolicies) return 0;;
               esac;;
          *) case "${COMP_WORDS[2]}" in
                     disable) COMPREPLY=($(compgen -W "-q" -- "${COMP_WORDS[COMP_CWORD]}"));;
                     list) COMPREPLY=($(compgen -W "--events -Y" -- "${COMP_WORDS[COMP_CWORD]}"));;
                     update) case "${COMP_WORDS[COMP_CWORD-1]}" in
                               --events) COMPREPLY=($(compgen -W "EventName ALL"  -- "${COMP_WORDS[COMP_CWORD]}"));;
                               *) COMPREPLY=($(compgen -W "--events -q"  -- "${COMP_WORDS[COMP_CWORD]}"));;
                             esac;;
                     enable) case  "${COMP_WORDS[COMP_CWORD-1]}" in
                                --log-fileset) COMPREPLY=($(compgen -W "$(_linked_fileset_names ${COMP_WORDS[1]})" -- "${COMP_WORDS[COMP_CWORD]}"));;
                                --retention) COMPREPLY=($(compgen -W "" -- "${COMP_WORDS[COMP_CWORD]}"));;
                               --events) COMPREPLY=($(compgen -W "EventName ALL" -- "${COMP_WORDS[COMP_CWORD]}"));;
                               *) COMPREPLY=($(compgen -W "--degraded -q --log-fileset --events --retention"  -- "${COMP_WORDS[COMP_CWORD]}"));;
                             esac;;
             esac;;
     esac;;
  esac
}
complete -F _mmaudit_completion mmaudit
